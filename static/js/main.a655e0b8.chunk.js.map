{"version":3,"sources":["components/Competition.js","components/HomePage.js","components/Match.js","components/MatchesData.js","components/RankGraph.js","components/Standings.js","App.js","index.js"],"names":["Competition","id","name","lastUpdated","currentSeason","TableRow","TableCell","align","to","pathname","aboutProps","startDate","endDate","HomePage","useState","competitions","setCompetitions","competitionName","setCompetitionName","loading","setLoading","availableComps","linkRef","useRef","fetchData","a","axios","get","headers","then","res","data","console","log","useEffect","filterCompetition","filter","competition","toLowerCase","includes","className","onClick","current","scrollIntoView","behavior","type","placeholder","onChange","e","target","value","Grid","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","TableBody","map","comp","ref","Match","standings","match","homeTeamLogo","setHomeTeamLogo","awayTeamLogo","setAwayTeamLogo","teamNull","setTeamNull","homeTeam","awayTeam","forEach","standing","table","teams","team","crestUrl","container","style","marginBottom","justifyContent","width","src","alt","status","score","fullTime","stage","Matches","compId","errorMessage","setErrorMessage","matches","setMatches","Date","setStartDate","matchDays","crossDomain","response","message","testDate","utcDate","utc","getTime","getTimezoneOffset","push","undefined","alert","searchedMatchDay","substring","localeCompare","getFullYear","getMonth","slice","getDate","ExampleCustomInput","forwardRef","height","selected","date","highlightDates","disabledKeyboardNavigation","customInput","length","href","rel","RankGraph","color","arrangeData","setArrangeData","i","rank","position","played","playedGames","won","lost","draw","points","logo","CustomTooltip","active","payload","label","border","backgroundColor","margin","group","ResponsiveContainer","BarChart","layout","barCategoryGap","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tick","fontSize","Tooltip","content","Bar","fill","animationDuration","radius","Standings","props","location","colors","setCompetition","season","setSeason","setStandings","heightValue","setHeightValue","switchDisplay","setSwitchDisplay","display","flexDirection","alignItems","toUpperCase","padding","textAlign","currentMatchday","winner","index","alignContent","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a655e0b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Competition = ({ id, name, lastUpdated, currentSeason }) => {\r\n  return (\r\n    <TableRow key={id}>\r\n      <TableCell align=\"center\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/standings\",\r\n            aboutProps: {\r\n              id: { id },\r\n            },\r\n          }}\r\n        >\r\n          {name}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.startDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.endDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{lastUpdated}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Competition;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport Competition from \"./Competition\";\r\nimport axios from \"axios\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst HomePage = () => {\r\n  const [competitions, setCompetitions] = useState([]);\r\n  const [competitionName, setCompetitionName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const availableComps = [\r\n    2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021,\r\n    2152,\r\n  ];\r\n\r\n  const linkRef = useRef();\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\"https://api.football-data.org/v2/competitions/\", {\r\n          headers: {\r\n            \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setCompetitions(res.data.competitions);\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const inputName = (e) => {\r\n    setCompetitionName(e.target.value);\r\n  };\r\n\r\n  //funtion to filter the competitions, search them\r\n\r\n  const filterCompetition = competitions.filter(\r\n    (competition) =>\r\n      competition.name.toLowerCase().includes(competitionName.toLowerCase()) &&\r\n      availableComps.includes(competition.id)\r\n  );\r\n\r\n  function handleBackClick() {\r\n    linkRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <div className=\"secondaryDiv\">\r\n        {loading ? (\r\n          <>\r\n            <h1 className=\"mainHeading\">FOOTBALL-STATS</h1>\r\n\r\n            <button className=\"subHeading\" onClick={handleBackClick}>\r\n              Made by Dhairy Raval\r\n            </button>\r\n\r\n            <p className=\"searchText\">Search football competitions</p>\r\n            <form className=\"competitionInputForm\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Name\"\r\n                className=\"competitionInput\"\r\n                onChange={inputName}\r\n              />\r\n            </form>\r\n            <br></br>\r\n            <Grid>\r\n              <TableContainer\r\n                className=\"mainTableContainer\"\r\n                component={Paper}\r\n                elevation={8}\r\n              >\r\n                <Table className=\"mainTable\" aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow className=\"headingRow\">\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Competition Name</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Current Season Start</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Current Season End</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Last Updated</p>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {filterCompetition.map((comp) => {\r\n                      //changing competition name from \"Premiera Division\" to \"La Liga\"\r\n                      if (comp.id === 2014) {\r\n                        comp.name = \"La Liga\";\r\n                      }\r\n                      return (\r\n                        <Competition\r\n                          key={comp.id}\r\n                          id={comp.id}\r\n                          name={comp.name}\r\n                          currentSeason={comp.currentSeason}\r\n                          lastUpdated={comp.lastUpdated}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n\r\n            <p className=\"subText\">\r\n              All football data provided by the Football-Data.org API\r\n            </p>\r\n            <h3 ref={linkRef}>Links to github and linkedIn</h3>\r\n          </>\r\n        ) : (\r\n          <p>Loading . . .</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Match = ({ standings, match }) => {\r\n  const [homeTeamLogo, setHomeTeamLogo] = useState(null);\r\n  const [awayTeamLogo, setAwayTeamLogo] = useState(null);\r\n  const [teamNull, setTeamNull] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchData = async () => {\r\n    if (match.homeTeam.id === null || match.awayTeam.id === null) {\r\n      setTeamNull(1);\r\n      setLoading(true);\r\n      return;\r\n    }\r\n\r\n    //extract out team logos here\r\n    standings.forEach((standing) => {\r\n      standing.table.forEach((teams) => {\r\n        if (teams.team.id === match.homeTeam.id) {\r\n          setHomeTeamLogo(teams.team.crestUrl);\r\n        } else if (teams.team.id === match.awayTeam.id) {\r\n          setAwayTeamLogo(teams.team.crestUrl);\r\n        }\r\n        if (homeTeamLogo !== null && awayTeamLogo !== null) {\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <Grid\r\n            container\r\n            style={{\r\n              marginBottom: \"3em\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <TableContainer\r\n              className=\"matchTableContainer\"\r\n              component={Paper}\r\n              elevation={1}\r\n            >\r\n              <Table className=\"matchTable\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow className=\"matchTableRow\">\r\n                    <TableCell\r\n                      style={{\r\n                        width: \"30%\",\r\n                      }}\r\n                    >\r\n                      <div className=\"matchTeamContainer\">\r\n                        {teamNull === 1 ? (\r\n                          \"TBA\"\r\n                        ) : (\r\n                          <>\r\n                            {match.homeTeam.name}\r\n                            {homeTeamLogo !== null ? (\r\n                              <img\r\n                                src={homeTeamLogo}\r\n                                alt=\"homeTeamLogo\"\r\n                                className=\"teamLogo\"\r\n                              />\r\n                            ) : null}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className=\"matchScoreContainer\">\r\n                        {match.status === \"SCHEDULED\" ? (\r\n                          <p>vs.</p>\r\n                        ) : (\r\n                          <p>\r\n                            {match.score.fullTime.homeTeam} -{\"  \"}\r\n                            {match.score.fullTime.awayTeam}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      style={{\r\n                        width: \"30%\",\r\n                      }}\r\n                    >\r\n                      <div className=\"matchTeamContainer\">\r\n                        {teamNull === 1 ? (\r\n                          \"TBA\"\r\n                        ) : (\r\n                          <>\r\n                            {match.awayTeam.name}\r\n                            {awayTeamLogo !== null ? (\r\n                              <img\r\n                                src={awayTeamLogo}\r\n                                alt=\"awayTeamLogo\"\r\n                                className=\"teamLogo\"\r\n                              />\r\n                            ) : null}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <p className={match.status}>{match.status}</p>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <p className=\"matchStatus\">{match.stage}</p>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <p>Loading . . .</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"../MatchesData.css\";\r\nimport Match from \"./Match\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Matches = ({ standings, compId }) => {\r\n  //useState const\r\n  const [errorMessage, setErrorMessage] = useState(\"false\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [matches, setMatches] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  var matchDays = [];\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `https://api.football-data.org/v2/competitions/${compId}/matches`,\r\n          {\r\n            headers: {\r\n              \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            crossDomain: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setMatches(res.data.matches);\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      if (e.response && e.response.data) {\r\n        console.log(e.response.data.message); // some reason error message\r\n        setErrorMessage(e.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const findMatchDays = () => {\r\n    matches.forEach((match) => {\r\n      var testDate = new Date(match.utcDate);\r\n      var utc = new Date(\r\n        testDate.getTime() + testDate.getTimezoneOffset() * 60000\r\n      );\r\n      matchDays.push(new Date(utc));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  findMatchDays();\r\n\r\n  if (compId === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (errorMessage !== \"false\") {\r\n    alert(errorMessage);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const searchedMatchDay = matches.filter(\r\n    (match) =>\r\n      match.utcDate\r\n        .substring(0, 10)\r\n        .localeCompare(\r\n          `${startDate.getFullYear()}-${(\r\n            \"0\" +\r\n            (startDate.getMonth() + 1)\r\n          ).slice(-2)}-${(\"0\" + startDate.getDate()).slice(-2)}`\r\n        ) === 0\r\n  );\r\n\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className=\"customDateInput\" onClick={onClick} ref={ref}>\r\n      <img\r\n        src=\"https://img.icons8.com/ios/50/000000/calendar.png\"\r\n        alt=\"calendarIcon\"\r\n        style={{ height: \"auto\", width: \"20%\" }}\r\n      />\r\n      {value}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"mainMatchesContainer\">\r\n          <h2 className=\"mainHeadingText\">Fixtures / Results :</h2>\r\n          <DatePicker\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            highlightDates={matchDays}\r\n            disabledKeyboardNavigation\r\n            customInput={<ExampleCustomInput />}\r\n          />\r\n\r\n          <div className=\"matchDayContainer\">\r\n            {searchedMatchDay.length === 0 ? (\r\n              <p>No games scheduled for the day</p>\r\n            ) : (\r\n              searchedMatchDay.map((match) => {\r\n                return (\r\n                  <Match key={match.id} standings={standings} match={match} />\r\n                );\r\n              })\r\n            )}\r\n\r\n            <a\r\n              className=\"calendarCitation\"\r\n              href=\"https://icons8.com/icon/23/calendar\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              Calendar icon by Icons8\r\n            </a>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"subText\">Loading . . .</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matches;\r\n","import React, { useState } from \"react\";\r\nimport \"../RankGraph.css\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst RankGraph = ({ standing, color }) => {\r\n  const data = [];\r\n  const [arrangeData, setArrangeData] = useState(\"asc\");\r\n\r\n  const table = standing.table;\r\n\r\n  if (arrangeData === \"asc\") {\r\n    for (let i = 0; i < table.length; i++) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  } else {\r\n    for (let i = table.length - 1; i > -1; i--) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  }\r\n\r\n  const changeOrder = () => {\r\n    if (arrangeData === \"asc\") {\r\n      setArrangeData(\"desc\");\r\n    } else {\r\n      setArrangeData(\"asc\");\r\n    }\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      //console.log(payload);\r\n      return (\r\n        <div className=\"tooltipContainer\">\r\n          <p className=\"toolTipLabel\">{label}</p>\r\n          <img\r\n            className=\"toolTipImage\"\r\n            src={payload[0].payload.logo}\r\n            alt=\"TeamLogo\"\r\n          />\r\n          <div className=\"toolTipStatsContainer\">\r\n            <p className=\"toolTipStats\">\r\n              <strong>GP</strong>\r\n              <br />\r\n              {payload[0].payload.played}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>W</strong>\r\n              <br />\r\n              {payload[0].payload.won}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>L</strong>\r\n              <br />\r\n              {payload[0].payload.lost}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>D</strong>\r\n              <br />\r\n              {payload[0].payload.draw}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>Pos</strong>\r\n              <br />\r\n              {payload[0].payload.position}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>P</strong>\r\n              <br />\r\n              {payload[0].payload.points}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"90%\",\r\n        height: \"90%\",\r\n        border: \"1px solid\",\r\n        backgroundColor: \"lightcoral\",\r\n        margin: \"3em\",\r\n      }}\r\n    >\r\n      <button onClick={() => changeOrder()}>{arrangeData}</button>\r\n      <p>\r\n        {standing.type} {standing.group}\r\n      </p>\r\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n        <BarChart data={data} layout=\"vertical\" barCategoryGap=\"15%\">\r\n          <CartesianGrid strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"points\" type=\"number\" />\r\n          <YAxis\r\n            dataKey=\"name\"\r\n            type=\"category\"\r\n            width={100}\r\n            tick={{ fontSize: 14 }}\r\n          />\r\n          <Tooltip content={<CustomTooltip />} style={{ width: 100 }} />\r\n          <Bar\r\n            dataKey=\"points\"\r\n            fill={color}\r\n            animationDuration={800}\r\n            radius={[0, 10, 10, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Matches from \"./MatchesData\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport RankGraph from \"./RankGraph\";\r\n\r\nconst Standings = (props) => {\r\n  const id = props.location.aboutProps;\r\n\r\n  //Array of colors for different bar graphs\r\n  //Added ~23 different colors to account for any future changes in the api\r\n  const colors = [\r\n    \"#6393e0\",\r\n    \"#3cb44b\",\r\n    \"#e6194b\",\r\n    \"#4363d8\",\r\n    \"#f58231\",\r\n    \"#911eb4\",\r\n    \"#46f0f0\",\r\n    \"#f032e6\",\r\n    \"#bcf60c\",\r\n    \"#ffe119\",\r\n    \"#fabebe\",\r\n    \"#008080\",\r\n    \"#9a6324\",\r\n    \"#fffac8\",\r\n    \"#800000\",\r\n    \"#aaffc3\",\r\n    \"#808000\",\r\n    \"#ffd8b1\",\r\n    \"#000075\",\r\n    \"#808080\",\r\n    \"#ffffff\",\r\n    \"#000000\",\r\n    \"#ff9900\",\r\n    \"#ace600\",\r\n    \"#ff3300\",\r\n  ];\r\n\r\n  //useState const\r\n  const [competition, setCompetition] = useState([]);\r\n  const [season, setSeason] = useState([]);\r\n  const [standings, setStandings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"false\");\r\n  const [heightValue, setHeightValue] = useState(800);\r\n  const [switchDisplay, setSwitchDisplay] = useState(2);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `https://api.football-data.org/v2/competitions/${id.id.id}/standings`,\r\n          {\r\n            headers: {\r\n              \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n            },\r\n            crossDomain: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setCompetition(res.data.competition);\r\n          setSeason(res.data.season);\r\n          setStandings(res.data.standings);\r\n          setHeightValue(200 + res.data.standings[0].table.length * 30); //setting a custom height of graphs\r\n          setErrorMessage(\"false\");\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      if (e.response && e.response.data) {\r\n        console.log(e.response.data.message); // some reason error message\r\n        setErrorMessage(e.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const toggleSwitch = () => {\r\n    if (switchDisplay === 1) {\r\n      setSwitchDisplay(2);\r\n    } else {\r\n      setSwitchDisplay(1);\r\n    }\r\n  };\r\n\r\n  if (id === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (errorMessage !== \"false\") {\r\n    alert(errorMessage);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      {loading ? (\r\n        <>\r\n          <div\r\n            className=\"mainHeadingContainer\"\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h2 className=\"mainHeadingText\">\r\n              {competition.name.toUpperCase()}\r\n            </h2>\r\n\r\n            <div\r\n              className=\"subHeadingContainer\"\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n                fontSize: \"18px\",\r\n                width: \"95%\",\r\n              }}\r\n            >\r\n              <p style={{ padding: \"2%\", textAlign: \"center\" }}>\r\n                <strong>Start Date:</strong> {season.startDate}\r\n              </p>\r\n              <p style={{ padding: \"2%\", textAlign: \"center\" }}>\r\n                <strong>End Date:</strong> {season.endDate}\r\n              </p>\r\n              <p style={{ padding: \"2%\", textAlign: \"center\" }}>\r\n                <strong>Round:</strong> {season.currentMatchday}\r\n              </p>\r\n              <p style={{ padding: \"2%\", textAlign: \"center\" }}>\r\n                <strong>Winner:</strong>{\" \"}\r\n                {season.winner === null ? \"TBA\" : season.winner.name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div\r\n            className=\"ButtonsContainer\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <Link to=\"/\">&lt;BACK</Link>\r\n\r\n            <button onClick={() => toggleSwitch()}>\r\n              {switchDisplay === 1 ? \"Fixtures/Results\" : \"League Positions\"}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"switchDisplayContainer\">\r\n            {switchDisplay === 1 ? (\r\n              <>\r\n                {standings.map((standing, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        justifyContent: \"center\",\r\n                        width: \"100%\",\r\n                        height: heightValue,\r\n                        backgroundColor: \"lightgray\",\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      <RankGraph standing={standing} color={colors[index]} />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"matchesContainer\">\r\n                  <Matches standings={standings} compId={id.id.id} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"subText\">Loading . . .</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Standings;\r\n","import React from \"react\";\n// import \"./App.css\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport Standings from \"./components/Standings\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/standings\" component={Standings} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}