{"version":3,"sources":["components/Competition.js","components/HomePage.js","components/Match.js","components/MatchesData.js","components/RankGraph.js","components/Standings.js","App.js","index.js"],"names":["Competition","id","name","lastUpdated","currentSeason","TableRow","TableCell","align","to","pathname","aboutProps","startDate","endDate","HomePage","useState","competitions","setCompetitions","competitionName","setCompetitionName","loading","setLoading","availableComps","fetchData","a","axios","get","headers","then","res","data","console","log","useEffect","filterCompetition","filter","competition","toLowerCase","includes","className","type","placeholder","onChange","e","target","value","Grid","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","TableBody","map","comp","Match","standings","match","homeTeamLogo","setHomeTeamLogo","awayTeamLogo","setAwayTeamLogo","teamNull","setTeamNull","homeTeam","awayTeam","forEach","standing","table","teams","team","crestUrl","container","style","marginTop","width","src","alt","status","score","fullTime","stage","Matches","compId","errorMessage","setErrorMessage","matches","setMatches","Date","setStartDate","matchDays","crossDomain","response","message","testDate","utcDate","utc","getTime","getTimezoneOffset","push","undefined","alert","searchedMatchDay","substring","localeCompare","getFullYear","getMonth","slice","getDate","selected","date","highlightDates","length","RankGraph","color","arrangeData","setArrangeData","i","rank","position","played","playedGames","won","lost","draw","points","logo","CustomTooltip","active","payload","label","height","backgroundColor","onClick","group","ResponsiveContainer","BarChart","layout","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tick","fontSize","Tooltip","content","Bar","fill","Standings","props","location","colors","setCompetition","season","setSeason","setStandings","heightValue","setHeightValue","switchDisplay","setSwitchDisplay","display","flexDirection","alignItems","justifyContent","padding","currentMatchday","winner","index","alignContent","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4ab8a75.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Competition = ({ id, name, lastUpdated, currentSeason }) => {\r\n  return (\r\n    <TableRow key={id}>\r\n      <TableCell align=\"center\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/standings\",\r\n            aboutProps: {\r\n              id: { id },\r\n            },\r\n          }}\r\n        >\r\n          {name}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.startDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.endDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{lastUpdated}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Competition;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport Competition from \"./Competition\";\r\nimport axios from \"axios\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst HomePage = () => {\r\n  const [competitions, setCompetitions] = useState([]);\r\n  const [competitionName, setCompetitionName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const availableComps = [\r\n    2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021,\r\n    2152,\r\n  ];\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\"https://api.football-data.org/v2/competitions/\", {\r\n          headers: {\r\n            \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setCompetitions(res.data.competitions);\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const inputName = (e) => {\r\n    setCompetitionName(e.target.value);\r\n  };\r\n\r\n  //funtion to filter the competitions, search them\r\n\r\n  const filterCompetition = competitions.filter(\r\n    (competition) =>\r\n      competition.name.toLowerCase().includes(competitionName.toLowerCase()) &&\r\n      availableComps.includes(competition.id)\r\n  );\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <div className=\"secondaryDiv\">\r\n        {loading ? (\r\n          <>\r\n            <h1 className=\"mainHeading\">FOOTY</h1>\r\n            <h3 className=\"subHeading\">Made by Dhairy Raval</h3>\r\n\r\n            <p className=\"searchText\">Search football competitions</p>\r\n            <form className=\"competitionInputForm\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Name\"\r\n                className=\"competitionInput\"\r\n                onChange={inputName}\r\n              />\r\n            </form>\r\n            <br></br>\r\n            <Grid>\r\n              <TableContainer\r\n                className=\"mainTableContainer\"\r\n                component={Paper}\r\n                elevation={8}\r\n              >\r\n                <Table className=\"mainTable\" aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow className=\"headingRow\">\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Competition Name</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Current Season Start</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Current Season End</p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <p className=\"headingCellText\">Last Updated</p>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {filterCompetition.map((comp) => {\r\n                      //changing competition name from \"Premiera Division\" to \"La Liga\"\r\n                      if (comp.id === 2014) {\r\n                        comp.name = \"La Liga\";\r\n                      }\r\n                      return (\r\n                        <Competition\r\n                          key={comp.id}\r\n                          id={comp.id}\r\n                          name={comp.name}\r\n                          currentSeason={comp.currentSeason}\r\n                          lastUpdated={comp.lastUpdated}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n\r\n            <p className=\"subText\">\r\n              All football data provided by the Football-Data.org API\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <p>Loading . . .</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Match = ({ standings, match }) => {\r\n  const [homeTeamLogo, setHomeTeamLogo] = useState(null);\r\n  const [awayTeamLogo, setAwayTeamLogo] = useState(null);\r\n  const [teamNull, setTeamNull] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  console.log(standings);\r\n  console.log(match);\r\n\r\n  const fetchData = async () => {\r\n    if (match.homeTeam.id === null || match.awayTeam.id === null) {\r\n      setTeamNull(1);\r\n      setLoading(true);\r\n      return;\r\n    }\r\n\r\n    //extract out team logos here\r\n    standings.forEach((standing) => {\r\n      standing.table.forEach((teams) => {\r\n        if (teams.team.id === match.homeTeam.id) {\r\n          setHomeTeamLogo(teams.team.crestUrl);\r\n        } else if (teams.team.id === match.awayTeam.id) {\r\n          setAwayTeamLogo(teams.team.crestUrl);\r\n        }\r\n        if (homeTeamLogo !== null && awayTeamLogo !== null) {\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <Grid container style={{ marginTop: \"2em\" }}>\r\n            <TableContainer\r\n              className=\"matchTableContainer\"\r\n              component={Paper}\r\n              elevation={6}\r\n            >\r\n              <Table className=\"matchTable\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow className=\"matchTableRow\">\r\n                    <TableCell\r\n                      style={{\r\n                        width: \"30%\",\r\n                      }}\r\n                    >\r\n                      <div className=\"matchTeamContainer\">\r\n                        {teamNull === 1 ? (\r\n                          \"TBA\"\r\n                        ) : (\r\n                          <>\r\n                            {match.homeTeam.name}\r\n                            {homeTeamLogo !== null ? (\r\n                              <img\r\n                                src={homeTeamLogo}\r\n                                alt=\"homeTeamLogo\"\r\n                                className=\"teamLogo\"\r\n                              />\r\n                            ) : null}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className=\"matchScoreContainer\">\r\n                        {match.status === \"SCHEDULED\" ? (\r\n                          <p>vs.</p>\r\n                        ) : (\r\n                          <p>\r\n                            {match.score.fullTime.homeTeam} -{\"  \"}\r\n                            {match.score.fullTime.awayTeam}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      style={{\r\n                        width: \"30%\",\r\n                      }}\r\n                    >\r\n                      <div className=\"matchTeamContainer\">\r\n                        {teamNull === 1 ? (\r\n                          \"TBA\"\r\n                        ) : (\r\n                          <>\r\n                            {match.awayTeam.name}\r\n                            {awayTeamLogo !== null ? (\r\n                              <img\r\n                                src={awayTeamLogo}\r\n                                alt=\"awayTeamLogo\"\r\n                                className=\"teamLogo\"\r\n                              />\r\n                            ) : null}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <p className={match.status}>{match.status}</p>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <p className=\"matchStatus\">{match.stage}</p>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <p>Loading . . .</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../MatchesData.css\";\r\nimport Match from \"./Match\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Matches = ({ standings, compId }) => {\r\n  //useState const\r\n  const [errorMessage, setErrorMessage] = useState(\"false\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [matches, setMatches] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  var matchDays = [];\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `https://api.football-data.org/v2/competitions/${compId}/matches`,\r\n          {\r\n            headers: {\r\n              \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            crossDomain: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setMatches(res.data.matches);\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      if (e.response && e.response.data) {\r\n        console.log(e.response.data.message); // some reason error message\r\n        setErrorMessage(e.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const findMatchDays = () => {\r\n    matches.forEach((match) => {\r\n      var testDate = new Date(match.utcDate);\r\n      var utc = new Date(\r\n        testDate.getTime() + testDate.getTimezoneOffset() * 60000\r\n      );\r\n      matchDays.push(new Date(utc));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  findMatchDays();\r\n\r\n  if (compId === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (errorMessage !== \"false\") {\r\n    alert(errorMessage);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const searchedMatchDay = matches.filter(\r\n    (match) =>\r\n      match.utcDate\r\n        .substring(0, 10)\r\n        .localeCompare(\r\n          `${startDate.getFullYear()}-${(\r\n            \"0\" +\r\n            (startDate.getMonth() + 1)\r\n          ).slice(-2)}-${(\"0\" + startDate.getDate()).slice(-2)}`\r\n        ) === 0\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"mainMatchesContainer\">\r\n          <h2 className=\"mainHeadingText\">Fixtures / Results :</h2>\r\n          <DatePicker\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n            highlightDates={matchDays}\r\n          />\r\n\r\n          <div className=\"matchDayContainer\">\r\n            {searchedMatchDay.length === 0 ? (\r\n              <p>No games scheduled for the day</p>\r\n            ) : (\r\n              searchedMatchDay.map((match) => {\r\n                return (\r\n                  <Match key={match.id} standings={standings} match={match} />\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"subText\">Loading . . .</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matches;\r\n","import React, { useState } from \"react\";\r\nimport \"../RankGraph.css\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst RankGraph = ({ standing, color }) => {\r\n  const data = [];\r\n  const [arrangeData, setArrangeData] = useState(\"asc\");\r\n\r\n  const table = standing.table;\r\n\r\n  if (arrangeData === \"asc\") {\r\n    for (let i = 0; i < table.length; i++) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  } else {\r\n    for (let i = table.length - 1; i > -1; i--) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  }\r\n\r\n  const changeOrder = () => {\r\n    if (arrangeData === \"asc\") {\r\n      setArrangeData(\"desc\");\r\n    } else {\r\n      setArrangeData(\"asc\");\r\n    }\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      //console.log(payload);\r\n      return (\r\n        <div className=\"tooltipContainer\">\r\n          <p className=\"toolTipLabel\">{label}</p>\r\n          <img\r\n            className=\"toolTipImage\"\r\n            src={payload[0].payload.logo}\r\n            alt=\"TeamLogo\"\r\n          />\r\n          <div className=\"toolTipStatsContainer\">\r\n            <p className=\"toolTipStats\">\r\n              <strong>GP</strong>\r\n              <br />\r\n              {payload[0].payload.played}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>W</strong>\r\n              <br />\r\n              {payload[0].payload.won}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>L</strong>\r\n              <br />\r\n              {payload[0].payload.lost}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>D</strong>\r\n              <br />\r\n              {payload[0].payload.draw}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>Pos</strong>\r\n              <br />\r\n              {payload[0].payload.position}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>P</strong>\r\n              <br />\r\n              {payload[0].payload.points}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"80%\", height: \"80%\", backgroundColor: \"lightblue\" }}>\r\n      <button onClick={() => changeOrder()}>{arrangeData}</button>\r\n      <p>\r\n        {standing.type} {standing.group}\r\n      </p>\r\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n        <BarChart\r\n          data={data}\r\n          layout=\"vertical\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"points\" type=\"number\" />\r\n          <YAxis\r\n            dataKey=\"name\"\r\n            type=\"category\"\r\n            width={150}\r\n            tick={{ fontSize: 12 }}\r\n          />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Bar dataKey=\"points\" fill={color}></Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Matches from \"./MatchesData\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport RankGraph from \"./RankGraph\";\r\n\r\nconst Standings = (props) => {\r\n  const id = props.location.aboutProps;\r\n\r\n  //Array of colors for different bar graphs\r\n  //Added ~23 different colors to account for any future changes in the api\r\n  const colors = [\r\n    \"#6393e0\",\r\n    \"#3cb44b\",\r\n    \"#e6194b\",\r\n    \"#4363d8\",\r\n    \"#f58231\",\r\n    \"#911eb4\",\r\n    \"#46f0f0\",\r\n    \"#f032e6\",\r\n    \"#bcf60c\",\r\n    \"#ffe119\",\r\n    \"#fabebe\",\r\n    \"#008080\",\r\n    \"#9a6324\",\r\n    \"#fffac8\",\r\n    \"#800000\",\r\n    \"#aaffc3\",\r\n    \"#808000\",\r\n    \"#ffd8b1\",\r\n    \"#000075\",\r\n    \"#808080\",\r\n    \"#ffffff\",\r\n    \"#000000\",\r\n    \"#ff9900\",\r\n    \"#ace600\",\r\n    \"#ff3300\",\r\n  ];\r\n\r\n  //useState const\r\n  const [competition, setCompetition] = useState([]);\r\n  const [season, setSeason] = useState([]);\r\n  const [standings, setStandings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"false\");\r\n  const [heightValue, setHeightValue] = useState(800);\r\n  const [switchDisplay, setSwitchDisplay] = useState(2);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `https://api.football-data.org/v2/competitions/${id.id.id}/standings`,\r\n          {\r\n            headers: {\r\n              \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n            },\r\n            crossDomain: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setCompetition(res.data.competition);\r\n          setSeason(res.data.season);\r\n          setStandings(res.data.standings);\r\n          setHeightValue(150 + res.data.standings[0].table.length * 30); //setting a custom height of graphs\r\n          setErrorMessage(\"false\");\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      if (e.response && e.response.data) {\r\n        console.log(e.response.data.message); // some reason error message\r\n        setErrorMessage(e.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const toggleSwitch = () => {\r\n    if (switchDisplay === 1) {\r\n      setSwitchDisplay(2);\r\n    } else {\r\n      setSwitchDisplay(1);\r\n    }\r\n  };\r\n\r\n  if (id === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (errorMessage !== \"false\") {\r\n    alert(errorMessage);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      {loading ? (\r\n        <>\r\n          <div\r\n            className=\"mainHeadingContainer\"\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h2 className=\"mainHeadingText\">{competition.name}</h2>\r\n\r\n            <div\r\n              className=\"subHeadingContainer\"\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n                fontSize: \"18px\",\r\n                width: \"95%\",\r\n              }}\r\n            >\r\n              <p style={{ padding: \"1%\" }}>\r\n                <strong>Start Date:</strong> {season.startDate}\r\n              </p>\r\n              <p style={{ padding: \"1%\" }}>\r\n                <strong>End Date:</strong> {season.endDate}\r\n              </p>\r\n              <p style={{ padding: \"1%\" }}>\r\n                <strong>Round:</strong> {season.currentMatchday}\r\n              </p>\r\n              <p style={{ padding: \"1%\" }}>\r\n                <strong>Winner:</strong>{\" \"}\r\n                {season.winner === null ? \"TBA\" : season.winner.name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div\r\n            className=\"ButtonsContainer\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <Link to=\"/\">&lt;BACK</Link>\r\n\r\n            <button onClick={() => toggleSwitch()}>\r\n              {switchDisplay === 1 ? \"Fixtures/Results\" : \"League Positions\"}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"switchDisplayContainer\">\r\n            {switchDisplay === 1 ? (\r\n              <>\r\n                {standings.map((standing, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignContent: \"center\",\r\n                        justifyContent: \"center\",\r\n                        width: \"90%\",\r\n                        height: heightValue,\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      <RankGraph standing={standing} color={colors[index]} />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"matchesContainer\">\r\n                  <Matches standings={standings} compId={id.id.id} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"subText\">Loading . . .</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Standings;\r\n","import React from \"react\";\n// import \"./App.css\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport Standings from \"./components/Standings\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/standings\" component={Standings} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}