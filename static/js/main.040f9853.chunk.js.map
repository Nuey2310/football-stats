{"version":3,"sources":["components/Competition.js","components/HomePage.js","components/RankGraph.js","components/Standings.js","App.js","index.js"],"names":["Competition","id","name","lastUpdated","currentSeason","TableRow","TableCell","align","to","pathname","aboutProps","startDate","endDate","HomePage","useState","competitions","setCompetitions","competitionName","setCompetitionName","loading","setLoading","availableComps","fetchData","a","axios","get","headers","then","res","data","console","log","useEffect","filterCompetition","filter","competition","toLowerCase","includes","className","type","placeholder","onChange","e","target","value","TableContainer","component","Paper","elevation","Table","aria-label","TableHead","TableBody","map","comp","RankGraph","standing","color","arrangeData","setArrangeData","table","i","length","rank","team","position","played","playedGames","won","lost","draw","points","logo","crestUrl","push","CustomTooltip","active","payload","label","src","alt","style","width","height","onClick","group","ResponsiveContainer","BarChart","layout","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tick","fontSize","Tooltip","content","Bar","fill","Standings","props","location","colors","standings","setStandings","errorMessage","setErrorMessage","response","message","undefined","alert","index","display","alignContent","justifyContent","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.040f9853.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Competition = ({ id, name, lastUpdated, currentSeason }) => {\r\n  return (\r\n    <TableRow key={id}>\r\n      <TableCell align=\"center\">\r\n        {/* <a href=\"#\">{name}</a> */}\r\n        <Link\r\n         \r\n          to={{\r\n            pathname: \"/standings\",\r\n            aboutProps: {\r\n              id: { id },\r\n            },\r\n          }}\r\n        >\r\n          {name}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.startDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {currentSeason === null ? \"TBD\" : currentSeason.endDate}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{lastUpdated}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Competition;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport Competition from \"./Competition\";\r\nimport axios from \"axios\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst HomePage = () => {\r\n  const [competitions, setCompetitions] = useState([]);\r\n  const [competitionName, setCompetitionName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const availableComps = [\r\n    2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021,\r\n    2152,\r\n  ];\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\"http://api.football-data.org/v2/competitions/\", {\r\n          headers: {\r\n            \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          //console.log(res);\r\n          setCompetitions(res.data.competitions);\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const inputName = (e) => {\r\n    setCompetitionName(e.target.value);\r\n  };\r\n\r\n  //funtion to filter the competitions, search them\r\n\r\n  const filterCompetition = competitions.filter(\r\n    (competition) =>\r\n      competition.name.toLowerCase().includes(competitionName.toLowerCase()) &&\r\n      availableComps.includes(competition.id)\r\n  );\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <div className=\"secondaryDiv\">\r\n        {loading ? (\r\n          <>\r\n            <h1 className=\"mainHeading\">FOOTY</h1>\r\n            <h3 className=\"subHeading\">Made by Dhairy Raval</h3>\r\n\r\n            <p className=\"searchText\">Search football competitions</p>\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Name\"\r\n                className=\"competitionInput\"\r\n                onChange={inputName}\r\n              />\r\n            </form>\r\n            <br></br>\r\n            <TableContainer\r\n              className=\"mainTabelContainer\"\r\n              component={Paper}\r\n              elevation={8}\r\n            >\r\n              <Table className=\"mainTable\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow className=\"headingRow\">\r\n                    <TableCell align=\"center\">\r\n                      <p className=\"headingCellText\">Competition Name</p>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <p className=\"headingCellText\">Current Season Start</p>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <p className=\"headingCellText\">Current Season End</p>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <p className=\"headingCellText\">Last Updated</p>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filterCompetition.map((comp) => {\r\n                    return (\r\n                      <Competition\r\n                        key={comp.id}\r\n                        id={comp.id}\r\n                        name={comp.name}\r\n                        currentSeason={comp.currentSeason}\r\n                        lastUpdated={comp.lastUpdated}\r\n                      />\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <p className=\"subText\">\r\n              All football data provided by the Football-Data.org API\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <p>Loading . . .</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport \"../RankGraph.css\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst RankGraph = ({ standing, color }) => {\r\n  const data = [];\r\n  const [arrangeData, setArrangeData] = useState(\"asc\");\r\n\r\n  const table = standing.table;\r\n\r\n  if (arrangeData === \"asc\") {\r\n    for (let i = 0; i < table.length; i++) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  } else {\r\n    for (let i = table.length - 1; i > -1; i--) {\r\n      let rank = {\r\n        name: table[i].team.name,\r\n        position: table[i].position,\r\n        played: table[i].playedGames,\r\n        won: table[i].won,\r\n        lost: table[i].lost,\r\n        draw: table[i].draw,\r\n        points: table[i].points,\r\n        logo: table[i].team.crestUrl,\r\n      };\r\n      data.push(rank);\r\n    }\r\n  }\r\n\r\n  const changeOrder = () => {\r\n    if (arrangeData === \"asc\") {\r\n      setArrangeData(\"desc\");\r\n    } else {\r\n      setArrangeData(\"asc\");\r\n    }\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      //console.log(payload);\r\n      return (\r\n        <div className=\"tooltipContainer\">\r\n          <p className=\"toolTipLabel\">{label}</p>\r\n          <img\r\n            className=\"toolTipImage\"\r\n            src={payload[0].payload.logo}\r\n            alt=\"TeamLogo\"\r\n          />\r\n          <div className=\"toolTipStatsContainer\">\r\n            <p className=\"toolTipStats\">\r\n              <strong>GP</strong>\r\n              <br />\r\n              {payload[0].payload.played}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>W</strong>\r\n              <br />\r\n              {payload[0].payload.won}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>L</strong>\r\n              <br />\r\n              {payload[0].payload.lost}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>D</strong>\r\n              <br />\r\n              {payload[0].payload.draw}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>Pos</strong>\r\n              <br />\r\n              {payload[0].payload.position}\r\n            </p>\r\n            <p className=\"toolTipStats\">\r\n              <strong>P</strong>\r\n              <br />\r\n              {payload[0].payload.points}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"80%\", height: \"100%\" }}>\r\n      <button onClick={() => changeOrder()}>{arrangeData}</button>\r\n      <p>\r\n        {standing.type} {standing.group}\r\n      </p>\r\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n        <BarChart\r\n          data={data}\r\n          layout=\"vertical\"\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"points\" type=\"number\" />\r\n          <YAxis\r\n            dataKey=\"name\"\r\n            type=\"category\"\r\n            width={100}\r\n            tick={{ fontSize: 12 }}\r\n          />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Bar dataKey=\"points\" fill={color}></Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport RankGraph from \"./RankGraph\";\r\n\r\nconst Standings = (props) => {\r\n  const id = props.location.aboutProps;\r\n\r\n  //Array of colors for different bar graphs\r\n  //Added ~23 different colors to account for any future changes in the api\r\n  const colors = [\r\n    \"#6393e0\",\r\n    \"#3cb44b\",\r\n    \"#e6194b\",\r\n    -\"#4363d8\",\r\n    \"#f58231\",\r\n    \"#911eb4\",\r\n    \"#46f0f0\",\r\n    \"#f032e6\",\r\n    \"#bcf60c\",\r\n    \"#ffe119\",\r\n    \"#fabebe\",\r\n    \"#008080\",\r\n    \"#9a6324\",\r\n    \"#fffac8\",\r\n    \"#800000\",\r\n    \"#aaffc3\",\r\n    \"#808000\",\r\n    \"#ffd8b1\",\r\n    \"#000075\",\r\n    \"#808080\",\r\n    \"#ffffff\",\r\n    \"#000000\",\r\n    \"#ff9900\",\r\n    \"#ace600\",\r\n    \"#ff3300\",\r\n  ];\r\n\r\n  //useState const\r\n  const [competitionName, setCompetitionName] = useState(\"\");\r\n  const [standings, setStandings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"false\");\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `http://api.football-data.org/v2/competitions/${id.id.id}/standings`,\r\n          {\r\n            headers: {\r\n              \"X-Auth-Token\": \"72aa30bc107e4c7fa1ca8f84861b8c95\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setCompetitionName(res.data.competition.name);\r\n          setStandings(res.data.standings);\r\n\r\n          setErrorMessage(\"false\");\r\n        });\r\n      setLoading(true);\r\n    } catch (e) {\r\n      if (e.response && e.response.data) {\r\n        console.log(e.response.data.message); // some reason error message\r\n        setErrorMessage(e.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (id === undefined) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (errorMessage !== \"false\") {\r\n    alert(errorMessage);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  console.log(standings);\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      {loading ? (\r\n        <>\r\n          <h2>The Competition Name is : </h2>\r\n          <h3>{competitionName}</h3>\r\n          <hr></hr>\r\n\r\n          {standings.map((standing, index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignContent: \"center\",\r\n                  justifyContent: \"center\",\r\n                  width: \"80%\",\r\n                  height: \"800px\",\r\n                  //backgroundColor: \"lightgrey\",\r\n                }}\r\n              >\r\n                <RankGraph\r\n                  key={index}\r\n                  standing={standing}\r\n                  color={colors[index]}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      ) : (\r\n        <p>Loading . . .</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Standings;\r\n","import React from \"react\";\n// import \"./App.css\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport Standings from \"./components/Standings\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/standings\" component={Standings} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}